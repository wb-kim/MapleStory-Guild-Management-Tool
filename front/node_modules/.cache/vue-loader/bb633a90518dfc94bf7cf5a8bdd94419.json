{"remainingRequest":"/Users/kim/Desktop/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kim/Desktop/front/src/components/Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kim/Desktop/front/src/components/Dropdown.vue","mtime":1673336993000},{"path":"/Users/kim/Desktop/front/node_modules/cache-loader/dist/cjs.js","mtime":1675054209075},{"path":"/Users/kim/Desktop/front/node_modules/babel-loader/lib/index.js","mtime":1675054209147},{"path":"/Users/kim/Desktop/front/node_modules/cache-loader/dist/cjs.js","mtime":1675054209075},{"path":"/Users/kim/Desktop/front/node_modules/vue-loader/lib/index.js","mtime":1675054209229}],"contextDependencies":[],"result":["\nexport default {\n  props: {\n    tag: {\n      type: String,\n      default: \"li\",\n    },\n    title: String,\n    icon: String,\n    titleClasses: [String, Object, Array],\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", false);\n    },\n  },\n};\n",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    class=\"dropdown\"\n    :class=\"{ show: isOpen }\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <a\n      class=\"dropdown-toggle btn-rotate\"\n      :class=\"titleClasses\"\n      data-toggle=\"dropdown\"\n    >\n      <slot name=\"title\">\n        <i :class=\"icon\"></i>\n        <span class=\"notification\"\n          >{{ title }}\n          <b class=\"caret\"></b>\n        </span>\n      </slot>\n    </a>\n    <ul class=\"dropdown-menu\" :class=\"{ show: isOpen }\">\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  props: {\n    tag: {\n      type: String,\n      default: \"li\",\n    },\n    title: String,\n    icon: String,\n    titleClasses: [String, Object, Array],\n  },\n  data() {\n    return {\n      isOpen: false,\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", false);\n    },\n  },\n};\n</script>\n"]}]}